import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { useToast } from '@/hooks/use-toast';
import Icon from '@/components/ui/icon';
import { Input } from '@/components/ui/input';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Label } from '@/components/ui/label';
import { Sheet, SheetContent, SheetDescription, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';

const privileges = [
  { 
    name: '–ë–∞—Ä–æ–Ω', 
    price: 10, 
    commands: ['/kit –ë–∞—Ä–æ–Ω', '/salary', '/crawl'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–ë–∞—Ä–æ–Ω] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '2 —Ç–æ—á–∫–∏ –¥–æ–º–æ–≤', '2 —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ 40,000 –±–ª–æ–∫–æ–≤', '6 —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ', '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ 7 —Å–µ–∫']
  },
  { 
    name: '–°—Ç—Ä–∞–∂', 
    price: 16, 
    commands: ['/kit –°—Ç—Ä–∞–∂', '/suicide', '/dchat'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–°—Ç—Ä–∞–∂] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '2 —Ç–æ—á–∫–∏ –¥–æ–º–æ–≤', '2 —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ 45,000 –±–ª–æ–∫–æ–≤', '7 —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ', '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ 6 —Å–µ–∫', '‚úî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ë–∞—Ä–æ–Ω–∞']
  },
  { 
    name: '–ì–µ—Ä–æ–π', 
    price: 24, 
    commands: ['/kit –ì–µ—Ä–æ–π'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–ì–µ—Ä–æ–π] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '–í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –°—Ç—Ä–∞–∂–∞', '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã']
  },
  { 
    name: '–ê—Å–ø–∏–¥', 
    price: 56, 
    commands: ['/kit –ê—Å–ø–∏–¥', '/clear', '/feed', '/heal', '/me'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–ê—Å–ø–∏–¥] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '2 —Ç–æ—á–∫–∏ –¥–æ–º–æ–≤', '2 —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ 60,000 –±–ª–æ–∫–æ–≤', '9 —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ', '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ 6 —Å–µ–∫', '‚úî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –Ω–∏–∂–µ']
  },
  { 
    name: '–°–∫–≤–∏–¥', 
    price: 69, 
    commands: ['/kit –°–∫–≤–∏–¥', '/back', '/ec', '/wbench', '/ad', '/buy', '/sell', '/name'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–°–∫–≤–∏–¥] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '3 —Ç–æ—á–∫–∏ –¥–æ–º–æ–≤', '3 —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ 75,000 –±–ª–æ–∫–æ–≤', '10 —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ', '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ 5 —Å–µ–∫', '‚úî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –Ω–∏–∂–µ']
  },
  { 
    name: '–ì–ª–∞–≤–∞', 
    price: 87, 
    commands: ['/kit –ì–ª–∞–≤–∞', '/salary', '/bc', '/ext', '/am toggle', '/msgtoggle', '/paytoggle', '/tptoggle', '/feed –ù–∏–∫', '/heal –ù–∏–∫', '/exp'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–ì–ª–∞–≤–∞] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '3 —Ç–æ—á–∫–∏ –¥–æ–º–æ–≤', '4 —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ 100,000 –±–ª–æ–∫–æ–≤', '11 —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ', '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ 4 —Å–µ–∫', '‚úî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –Ω–∏–∂–µ']
  },
  { 
    name: '–≠–ª–∏—Ç–∞', 
    price: 149, 
    commands: ['/kit –≠–ª–∏—Ç–∞', '/time', '/weather', '/loom', '/carttable', '/beezooka', '/kittycannon', '/firework', '/name (—Ü–≤–µ—Ç–Ω–æ–π)'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–≠–ª–∏—Ç–∞] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '3 —Ç–æ—á–∫–∏ –¥–æ–º–æ–≤', '5 —Ä–µ–≥–∏–æ–Ω–æ–≤ –ø–æ 150,000 –±–ª–æ–∫–æ–≤', '12 —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ', '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ 4 —Å–µ–∫', '‚úî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –Ω–∏–∂–µ']
  },
  { 
    name: '–¢–∏—Ç–∞–Ω', 
    price: 239, 
    commands: ['/kit –¢–∏—Ç–∞–Ω', '/jump', '/afk', '/setwarp', '/delwarp', '/repair'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–¢–∏—Ç–∞–Ω] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '4 —Ç–æ—á–∫–∏ –¥–æ–º–æ–≤', '6 —Ä–µ–≥–∏–æ–Ω–æ–≤ –ø–æ 200,000 –±–ª–æ–∫–æ–≤', '13 —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ', '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ 3 —Å–µ–∫', '–ù–µ –∫–∏–∫–∞–µ—Ç –∑–∞ –ê–§–ö', '‚úî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –Ω–∏–∂–µ']
  },
  { 
    name: '–ü—Ä–∏–Ω—Ü', 
    price: 329, 
    commands: ['/kit –ü—Ä–∏–Ω—Ü', '/smithtable', '/stonecutter', '/grindstone'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–ü—Ä–∏–Ω—Ü] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '5 —Ç–æ—á–µ–∫ –¥–æ–º–æ–≤', '7 —Ä–µ–≥–∏–æ–Ω–æ–≤ –ø–æ 250,000 –±–ª–æ–∫–æ–≤', '14 —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ', '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ 3 —Å–µ–∫', '‚úî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –Ω–∏–∂–µ']
  },
  { 
    name: '–ö–Ω—è–∑—å', 
    price: 449, 
    commands: ['/kit –ö–Ω—è–∑—å', '/fly', '/amute', '/enchant', '/anvil', '/speed', '/salary', '/exp'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–ö–Ω—è–∑—å] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '7 —Ç–æ—á–µ–∫ –¥–æ–º–æ–≤', '10 —Ä–µ–≥–∏–æ–Ω–æ–≤ –ø–æ 350,000 –±–ª–æ–∫–æ–≤', '15 —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ', '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ 2 —Å–µ–∫', '‚úî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –Ω–∏–∂–µ']
  },
  { 
    name: '–ì–µ—Ä—Ü–æ–≥', 
    price: 699, 
    commands: ['/kit –ö—Ä—É—à–∏—Ç–µ–ª—å', '/enchant', '/anvil', '/speed', '/salary', '/exp'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–ì–µ—Ä—Ü–æ–≥] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '10 —Ç–æ—á–µ–∫ –¥–æ–º–æ–≤', '15 —Ä–µ–≥–∏–æ–Ω–æ–≤ –ø–æ 500,000 –±–ª–æ–∫–æ–≤', '15 —Å–ª–æ—Ç–æ–≤ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ', '–í—Ö–æ–¥ –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä', '–ù–µ—Ç –∑–∞–¥–µ—Ä–∂–∫–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏', '‚úî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –Ω–∏–∂–µ']
  },
  { 
    name: '–°–ø–æ–Ω—Å–æ—Ä', 
    price: 850, 
    commands: ['–í—Å–µ –∫–æ–º–∞–Ω–¥—ã —Å–µ—Ä–≤–µ—Ä–∞'],
    features: ['–ü—Ä–µ—Ñ–∏–∫—Å [–°–ø–æ–Ω—Å–æ—Ä] –≤ —á–∞—Ç–µ –∏ —Ç–∞–±–µ', '–í—Å–µ –∫–∏—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞', '50 —Ç–æ—á–µ–∫ –¥–æ–º–æ–≤', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã', '–í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞', 'VIP –ø–æ–¥–¥–µ—Ä–∂–∫–∞']
  }
];

const extraItems = [
  { name: '–î–æ–Ω–∞—Ç-–∫–µ–π—Å', price: 60, description: '–°–ª—É—á–∞–π–Ω—ã–µ —Ü–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã', icon: 'Gift' },
  { name: '1000 —Ç–æ–∫–µ–Ω–æ–≤', price: 2, description: '–í–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–∞—è –≤–∞–ª—é—Ç–∞', icon: 'Coins' }
];

const reviews = [
  { name: 'Lololoshka', text: '–û–¥–∏–Ω –∏–∑ –ª—É—á—à–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö —è –∏–≥—Ä–∞–ª! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥—ã üéÆ', rating: 5, sponsor: true },
  { name: 'FixPlay', text: '–†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º —Å–≤–æ–∏–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º! –°—Ç–∞–±–∏–ª—å–Ω—ã–π, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —Å –∫—Ä—É—Ç—ã–º–∏ –∏–≤–µ–Ω—Ç–∞–º–∏ üî•', rating: 5, sponsor: true },
  { name: 'OneTwo', text: '–ò–≥—Ä–∞—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ —Å –¥—Ä—É–∑—å—è–º–∏. –ê–¥–º–∏–Ω—ã –º–æ–ª–æ–¥—Ü—ã, —Å–µ—Ä–≤–µ—Ä —Ç–æ–ø! üíé', rating: 5, sponsor: true },
  { name: '–ú–∞–∫—Å–∏–º_228', text: '–õ—É—á—à–∏–π —Å–µ—Ä–≤–µ—Ä! –ê–¥–º–∏–Ω—ã –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–µ, –æ–Ω–ª–∞–π–Ω –æ–≥–æ–Ω—å üî•', rating: 5 },
  { name: 'ProGamer2024', text: '–ò–≥—Ä–∞—é —É–∂–µ –ø–æ–ª–≥–æ–¥–∞, –∫—É–ø–∏–ª –¢–∏—Ç–∞–Ω–∞ - –Ω–µ –ø–æ–∂–∞–ª–µ–ª! –î–æ–Ω–∞—Ç –æ–∫—É–ø–∞–µ—Ç—Å—è', rating: 5 },
  { name: '–ö—Ä–∏—Å—Ç–∏–Ω–∞–ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç', text: '–û—á–µ–Ω—å –∫—Ä—É—Ç—ã–µ –∏–≤–µ–Ω—Ç—ã –∏ –∫–æ–Ω–∫—É—Ä—Å—ã, –≤—ã–∏–≥—Ä–∞–ª–∞ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é!', rating: 5 },
  { name: 'ShadowNinja', text: '–¢–æ–ø–æ–≤–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞, –Ω–µ—Ç —á–∏—Ç–µ—Ä–æ–≤, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±—ã—Å—Ç—Ä–æ –æ—Ç–≤–µ—á–∞–µ—Ç', rating: 5 },
  { name: 'BuilderPro', text: '–ò–≥—Ä–∞—é —Å –¥—Ä—É–∑—å—è–º–∏, —Å–æ–∑–¥–∞–ª–∏ —Å–≤–æ—é –≥–∏–ª—å–¥–∏—é. –°–µ—Ä–≤–µ—Ä –ø—Ä–æ—Å—Ç–æ –±–æ–º–±–∞!', rating: 5 },
  { name: 'DiamondHunter', text: '–°—Ç–∞–±–∏–ª—å–Ω—ã–π –æ–Ω–ª–∞–π–Ω, –Ω–µ—Ç –ª–∞–≥–æ–≤. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!', rating: 5 },
  { name: 'RedstoneKing', text: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∂–∏–º—ã –∏–≥—Ä—ã, –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –ö—Ä–∞—Å–∞–≤—Ü—ã!', rating: 5 }
];

const rules = [
  '–ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —á–∏—Ç–æ–≤ –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π, –¥–∞—é—â–∏—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ',
  '–ó–∞–ø—Ä–µ—â–µ–Ω—ã –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è, –º–∞—Ç –∏ —Ç–æ–∫—Å–∏—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ',
  '–ó–∞–ø—Ä–µ—â—ë–Ω —Å–ø–∞–º –≤ —á–∞—Ç–µ –∏ —Ä–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤',
  '–ó–∞–ø—Ä–µ—â—ë–Ω –≥—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–æ –ø–æ—Å—Ç—Ä–æ–µ–∫ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤',
  '–ó–∞–ø—Ä–µ—â–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∞ –∏–≥—Ä–æ–≤—ã—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π –∑–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏',
  '–£–≤–∞–∂–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ —Å–æ–±–ª—é–¥–∞–π—Ç–µ –∏—Ö —É–∫–∞–∑–∞–Ω–∏—è',
  '–ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≤—É—à–µ–∫ –Ω–∞ —Å–ø–∞–≤–Ω–µ',
  '–ë–∞–≥–æ—é–∑ –∏ –¥—é–ø –∑–∞–ø—Ä–µ—â–µ–Ω—ã –∏ –∫–∞—Ä–∞—é—Ç—Å—è –±–∞–Ω–æ–º',
  '–ü–æ–ø—ã—Ç–∫–∏ –º–∞—Ö–∏–Ω–∞—Ü–∏–π –æ–ø–ª–∞—Ç–∞–º–∏ –Ω–∞–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –±–∞–Ω–æ–º –±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤',
  '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —á–µ–∫ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –¥–æ–Ω–∞—Ç–æ–º'
];

const antiCheatPrograms = [
  { name: 'SystemInformer', desc: '–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ª–µ–∑—Ç—å –≤ –ø–∞–º—è—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ —Å–≤–æ–π—Å—Ç–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤' },
  { name: 'USB-DriveLog', desc: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è USB —Ñ–ª–µ—à–µ–∫' },
  { name: 'USB-Deview', desc: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è USB —É—Å—Ç—Ä–æ–π—Å—Ç–≤' },
  { name: 'ExecutedProgramsList', desc: '–ü–æ–∏—Å–∫ –∏ –∞–Ω–∞–ª–∏–∑ —Ä–∞–Ω–µ–µ –∑–∞–ø—É—Å–∫–∞–≤—à–∏—Ö—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π' },
  { name: 'WinPrefetchView', desc: '–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–∞–ø–∫–∏ Prefetch –¥–ª—è –ø–æ–∏—Å–∫–∞ —á–∏—Ç–æ–≤' },
  { name: 'LastActivityView', desc: '–ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ü–ö –¥–ª—è –ø–æ–∏—Å–∫–∞ —á–∏—Ç–æ–≤' },
  { name: 'CachedProgramsList', desc: '–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–∞–≤—à–∏—Ö—Å—è —Ñ–∞–π–ª–∞—Ö' },
  { name: 'OpenSaveFilesView', desc: '–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–∞–≤—à–∏—Ö—Å—è —Ñ–∞–π–ª–∞—Ö –≤ –ø–∞–º—è—Ç–∏' }
];

export default function Index() {
  const [activeSection, setActiveSection] = useState('main');
  const [cart, setCart] = useState<any[]>([]);
  const [cartOpen, setCartOpen] = useState(false);
  const [purchaseNickname, setPurchaseNickname] = useState('');
  const [onlinePlayers, setOnlinePlayers] = useState(127);
  const { toast } = useToast();
  const serverIP = 'RoomTimeServ.mc-join.me';

  const copyIP = () => {
    navigator.clipboard.writeText(serverIP);
    toast({
      title: '‚úÖ IP —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!',
      description: '–ú–æ–∂–µ—à—å –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É',
    });
  };

  const addToCart = (item: any) => {
    setCart([...cart, item]);
    toast({
      title: '‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!',
      description: `${item.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`,
    });
  };

  const removeFromCart = (index: number) => {
    const newCart = cart.filter((_, i) => i !== index);
    setCart(newCart);
  };

  const getTotalPrice = () => {
    return cart.reduce((sum, item) => sum + item.price, 0);
  };

  const handlePurchase = async () => {
    if (!purchaseNickname.trim()) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º',
        variant: 'destructive'
      });
      return;
    }

    try {
      const response = await fetch('https://functions.poehali.dev/68a6dcd5-1846-4cd5-b898-1a2be8697e6a', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          nickname: purchaseNickname,
          items: cart,
          total_price: getTotalPrice()
        })
      });

      const data = await response.json();

      if (data.success) {
        const telegramMessage = encodeURIComponent(data.telegram_message);
        const telegramUrl = `https://t.me/KarpovST1M?text=${telegramMessage}`;
        window.open(telegramUrl, '_blank');
        
        toast({
          title: '‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!',
          description: `–¢–æ–≤–∞—Ä—ã –±—É–¥—É—Ç –≤—ã–¥–∞–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${data.server_ip}`,
        });
        
        setCart([]);
        setPurchaseNickname('');
        setCartOpen(false);
      }
    } catch (error) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑',
        variant: 'destructive'
      });
    }
  };

  const scrollToSection = (section: string) => {
    setActiveSection(section);
    const element = document.getElementById(section);
    element?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    const interval = setInterval(() => {
      setOnlinePlayers(prev => {
        const change = Math.floor(Math.random() * 5) - 2;
        const newValue = prev + change;
        return Math.max(100, Math.min(150, newValue));
      });
    }, 5000);
    return () => clearInterval(interval);
  }, []);

  return (
    <div className="min-h-screen bg-gradient-to-b from-[#0a0a0a] via-[#1a0f2e] to-[#0a0a0a] relative">
      <div 
        className="fixed inset-0 z-0 opacity-40"
        style={{
          backgroundImage: 'url(https://cdn.poehali.dev/projects/d81d0294-984b-4c6d-9ba1-24a278b745a2/files/f570c8ca-3676-4d9e-8b01-08bbe6176ab3.jpg)',
          backgroundSize: 'cover',
          backgroundPosition: 'center',
          backgroundRepeat: 'no-repeat',
          filter: 'blur(1px) brightness(0.7)'
        }}
      />
      <div className="relative z-10">
      <nav className="fixed top-0 left-0 right-0 z-50 bg-black/80 backdrop-blur-md border-b-2 border-primary/30">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between flex-wrap gap-4">
            <h1 className="text-xl md:text-2xl text-primary animate-pulse-glow">
              ROOMTIMESERV
            </h1>
            <div className="flex flex-wrap gap-2 items-center">
              {['main', 'privileges', 'reviews', 'promo', 'support', 'rules'].map((section) => (
                <Button
                  key={section}
                  variant={activeSection === section ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => scrollToSection(section)}
                  className="text-xs md:text-sm pixel-corners hover:scale-105 transition-transform"
                >
                  {section === 'main' && '–ì–ª–∞–≤–Ω–∞—è'}
                  {section === 'privileges' && '–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏'}
                  {section === 'reviews' && '–û—Ç–∑—ã–≤—ã'}
                  {section === 'promo' && '–ü—Ä–æ–º–æ–∫–æ–¥—ã'}
                  {section === 'support' && '–ü–æ–¥–¥–µ—Ä–∂–∫–∞'}
                  {section === 'rules' && '–ü—Ä–∞–≤–∏–ª–∞'}
                </Button>
              ))}
              <Sheet open={cartOpen} onOpenChange={setCartOpen}>
                <SheetTrigger asChild>
                  <Button variant="outline" size="sm" className="relative pixel-corners">
                    <Icon name="ShoppingCart" size={18} />
                    {cart.length > 0 && (
                      <Badge className="absolute -top-2 -right-2 h-5 w-5 p-0 flex items-center justify-center bg-accent">
                        {cart.length}
                      </Badge>
                    )}
                  </Button>
                </SheetTrigger>
                <SheetContent className="bg-card/95 backdrop-blur-md border-primary/30">
                  <SheetHeader>
                    <SheetTitle className="text-primary">–ö–æ—Ä–∑–∏–Ω–∞</SheetTitle>
                    <SheetDescription>
                      {cart.length === 0 ? '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞' : `–¢–æ–≤–∞—Ä–æ–≤: ${cart.length}`}
                    </SheetDescription>
                  </SheetHeader>
                  <div className="mt-6 space-y-4">
                    {cart.map((item, idx) => (
                      <div key={idx} className="flex items-center justify-between p-3 bg-background/50 rounded-lg border border-primary/20">
                        <div>
                          <p className="font-bold text-primary">{item.name}</p>
                          <p className="text-sm text-muted-foreground">{item.price}‚ÇΩ</p>
                        </div>
                        <Button
                          variant="destructive"
                          size="sm"
                          onClick={() => removeFromCart(idx)}
                        >
                          <Icon name="Trash2" size={16} />
                        </Button>
                      </div>
                    ))}
                    {cart.length > 0 && (
                      <div className="space-y-4 pt-4 border-t border-primary/20">
                        <div className="flex justify-between text-lg font-bold">
                          <span>–ò—Ç–æ–≥–æ:</span>
                          <span className="text-primary">{getTotalPrice()}‚ÇΩ</span>
                        </div>
                        <div className="space-y-2">
                          <Label htmlFor="nickname">–í–∞—à –Ω–∏–∫–Ω–µ–π–º –≤ Minecraft</Label>
                          <Input
                            id="nickname"
                            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫"
                            value={purchaseNickname}
                            onChange={(e) => setPurchaseNickname(e.target.value)}
                            className="bg-background/50 border-primary/30"
                          />
                        </div>
                        <Button
                          className="w-full animate-pulse-glow"
                          onClick={handlePurchase}
                        >
                          –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                        </Button>
                      </div>
                    )}
                  </div>
                </SheetContent>
              </Sheet>
            </div>
          </div>
        </div>
      </nav>

      <section id="main" className="min-h-screen flex items-center justify-center pt-20 px-4 relative overflow-hidden">
        <div 
          className="absolute left-10 top-1/2 -translate-y-1/2 w-80 h-96 opacity-20 pointer-events-none select-none"
          style={{
            backgroundImage: 'url(https://cdn.poehali.dev/projects/d81d0294-984b-4c6d-9ba1-24a278b745a2/files/fe2c644e-7c50-4df9-8255-d8c752d00c7a.jpg)',
            backgroundSize: 'cover',
            backgroundPosition: 'center',
            filter: 'brightness(0.7)'
          }}
        />
        <div 
          className="absolute right-10 top-1/2 -translate-y-1/2 w-96 h-[28rem] opacity-30 pointer-events-none select-none"
          style={{
            backgroundImage: 'url(https://cdn.poehali.dev/projects/d81d0294-984b-4c6d-9ba1-24a278b745a2/files/8dfb5e30-d579-4a46-9509-b727255a9167.jpg)',
            backgroundSize: 'cover',
            backgroundPosition: 'center',
            filter: 'brightness(0.6) contrast(1.2)'
          }}
        />
        <div className="absolute top-20 left-10 text-6xl animate-float opacity-50">‚õèÔ∏è</div>
        <div className="absolute top-40 right-20 text-5xl animate-float opacity-50" style={{ animationDelay: '1s' }}>üíé</div>
        <div className="absolute bottom-20 left-1/4 text-7xl animate-float opacity-50" style={{ animationDelay: '2s' }}>üü©</div>
        <div className="absolute bottom-40 right-1/3 text-5xl animate-float opacity-50" style={{ animationDelay: '1.5s' }}>‚öîÔ∏è</div>
        <div className="text-center max-w-4xl animate-fade-in relative z-10">
          <div className="mb-8 animate-float">
            <h2 className="text-4xl md:text-6xl lg:text-7xl mb-6 bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent leading-tight">
              ROOMTIMESERV
            </h2>
            <p className="text-xl md:text-2xl text-muted-foreground mb-4">
              –õ—É—á—à–∏–π Minecraft —Å–µ—Ä–≤–µ—Ä –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö –≥–µ–π–º–µ—Ä–æ–≤
            </p>
            <div className="flex items-center justify-center gap-4 mb-8">
              <Badge className="bg-accent/20 text-accent border border-accent px-4 py-2 text-sm animate-pulse">
                <Icon name="Star" className="mr-1" size={14} />
                –ü—Ä–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ Lololoshka & FixPlay
              </Badge>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
            <div className="bg-card/50 backdrop-blur-sm border-2 border-primary/50 pixel-corners p-6 hover:border-primary transition-all animate-scale-in">
              <div className="flex flex-col items-center gap-4">
                <Badge className="text-sm md:text-base px-4 py-2 bg-secondary">IP —Å–µ—Ä–≤–µ—Ä–∞</Badge>
                <p className="text-2xl md:text-3xl font-bold text-primary break-all">
                  {serverIP}
                </p>
                <Button onClick={copyIP} size="lg" className="animate-pulse-glow w-full">
                  <Icon name="Copy" className="mr-2" size={20} />
                  –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å IP
                </Button>
              </div>
            </div>

            <div className="bg-card/50 backdrop-blur-sm border-2 border-accent/50 pixel-corners p-6 hover:border-accent transition-all animate-scale-in">
              <div className="flex flex-col items-center gap-4">
                <Badge className="text-sm md:text-base px-4 py-2 bg-accent">–û–Ω–ª–∞–π–Ω —Å–µ–π—á–∞—Å</Badge>
                <div className="flex items-baseline gap-2">
                  <p className="text-4xl md:text-5xl font-bold text-accent animate-pulse">
                    {onlinePlayers}
                  </p>
                  <Icon name="Users" className="text-accent" size={32} />
                </div>
                <p className="text-sm text-muted-foreground">–∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ</p>
              </div>
            </div>
          </div>

          <div className="flex flex-wrap justify-center gap-4 mb-8">
            <Button
              variant="outline"
              size="lg"
              className="pixel-corners hover:bg-[#5865F2] hover:text-white transition-all"
              asChild
            >
              <a href="https://discord.gg/WBrBCpUbkc" target="_blank" rel="noopener noreferrer">
                <Icon name="MessageCircle" className="mr-2" size={20} />
                Discord
              </a>
            </Button>
            <Button
              variant="outline"
              size="lg"
              className="pixel-corners hover:bg-[#0088cc] hover:text-white transition-all"
              asChild
            >
              <a href="https://t.me/RoomTimeSRV" target="_blank" rel="noopener noreferrer">
                <Icon name="Send" className="mr-2" size={20} />
                Telegram
              </a>
            </Button>
            <Button
              variant="outline"
              size="lg"
              className="pixel-corners hover:bg-[#0077ff] hover:text-white transition-all"
              asChild
            >
              <a href="https://vk.com/minercasoft" target="_blank" rel="noopener noreferrer">
                <Icon name="Users" className="mr-2" size={20} />
                –ü–æ–¥–¥–µ—Ä–∂–∫–∞ VK
              </a>
            </Button>
          </div>

          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mt-12">
            {[
              { icon: 'Users', label: '–û–Ω–ª–∞–π–Ω 24/7', value: '24/7' },
              { icon: 'Zap', label: '–ë–µ–∑ –ª–∞–≥–æ–≤', value: '0ms' },
              { icon: 'Shield', label: '–ó–∞—â–∏—Ç–∞ –æ—Ç —á–∏—Ç–æ–≤', value: '100%' },
              { icon: 'Clock', label: '–†–∞–±–æ—Ç–∞–µ–º', value: '2+ –≥–æ–¥–∞' }
            ].map((item, idx) => (
              <Card key={idx} className="bg-card/30 border-primary/30 hover:border-primary transition-all hover:scale-105 animate-fade-in" style={{ animationDelay: `${idx * 0.1}s` }}>
                <CardContent className="p-4 text-center">
                  <Icon name={item.icon as any} className="mx-auto mb-2 text-primary" size={32} />
                  <p className="text-2xl font-bold text-accent mb-1">{item.value}</p>
                  <p className="text-xs text-muted-foreground">{item.label}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="privileges" className="min-h-screen py-20 px-4">
        <div className="container mx-auto">
          <h2 className="text-3xl md:text-5xl text-center mb-12 text-primary">–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-12">
            {privileges.map((priv, idx) => (
              <Card
                key={idx}
                className="bg-gradient-to-br from-card/90 to-card/50 border-2 border-secondary/50 hover:border-primary transition-all hover:scale-105 pixel-corners animate-fade-in"
                style={{ animationDelay: `${idx * 0.05}s` }}
              >
                <CardHeader>
                  <CardTitle className="text-2xl text-primary flex items-center justify-between">
                    {priv.name}
                    <Badge className="bg-accent text-accent-foreground">{priv.price}‚ÇΩ</Badge>
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div>
                    <p className="text-xs text-muted-foreground mb-2 font-bold">–ö–æ–º–∞–Ω–¥—ã:</p>
                    <div className="space-y-1">
                      {priv.commands.map((cmd, cIdx) => (
                        <code key={cIdx} className="block text-xs bg-background/50 p-1 rounded text-primary">
                          {cmd}
                        </code>
                      ))}
                    </div>
                  </div>
                  <div>
                    <p className="text-xs text-muted-foreground mb-2 font-bold">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</p>
                    <ul className="space-y-1">
                      {priv.features.map((feature, fIdx) => (
                        <li key={fIdx} className="flex items-start gap-2 text-xs">
                          <Icon name="Check" className="text-primary mt-0.5 flex-shrink-0" size={12} />
                          <span>{feature}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                  <Button 
                    className="w-full animate-pulse-glow" 
                    size="sm"
                    onClick={() => addToCart({ name: priv.name, price: priv.price, type: 'privilege' })}
                  >
                    <Icon name="ShoppingCart" className="mr-2" size={16} />
                    –í –∫–æ—Ä–∑–∏–Ω—É
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>

          <div className="max-w-4xl mx-auto">
            <h3 className="text-2xl md:text-3xl text-center mb-6 text-secondary">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {extraItems.map((item, idx) => (
                <Card
                  key={idx}
                  className="bg-gradient-to-br from-accent/20 to-secondary/20 border-2 border-accent/50 hover:border-accent transition-all hover:scale-105 pixel-corners animate-fade-in"
                >
                  <CardHeader>
                    <div className="flex items-center gap-4">
                      <Icon name={item.icon as any} className="text-accent" size={40} />
                      <div className="flex-1">
                        <CardTitle className="text-xl text-primary">{item.name}</CardTitle>
                        <CardDescription>{item.description}</CardDescription>
                      </div>
                      <Badge className="bg-accent text-accent-foreground text-lg">{item.price}‚ÇΩ</Badge>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <Button 
                      className="w-full animate-pulse-glow" 
                      onClick={() => addToCart({ name: item.name, price: item.price, type: 'extra' })}
                    >
                      <Icon name="ShoppingCart" className="mr-2" size={16} />
                      –í –∫–æ—Ä–∑–∏–Ω—É
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
            <p className="text-center text-muted-foreground mt-4 text-sm">
              üí° –¢–æ–≤–∞—Ä—ã –º–æ–∂–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –∏ –≤ –ª—é–±–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ
            </p>
          </div>
        </div>
      </section>

      <section id="reviews" className="min-h-screen py-20 px-4 bg-gradient-to-b from-transparent via-secondary/10 to-transparent">
        <div className="container mx-auto">
          <h2 className="text-3xl md:text-5xl text-center mb-12 text-primary">–û—Ç–∑—ã–≤—ã –∏ —Å–ø–æ–Ω—Å–æ—Ä—ã</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {reviews.map((review, idx) => (
              <Card
                key={idx}
                className={`${review.sponsor ? 'bg-gradient-to-br from-accent/30 to-secondary/30 border-accent' : 'bg-card/80 border-primary/30'} hover:border-primary transition-all hover:scale-105 animate-fade-in`}
                style={{ animationDelay: `${idx * 0.05}s` }}
              >
                <CardHeader>
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      <CardTitle className="text-lg text-primary">{review.name}</CardTitle>
                      {review.sponsor && (
                        <Badge className="bg-accent text-accent-foreground">–°–ø–æ–Ω—Å–æ—Ä</Badge>
                      )}
                    </div>
                    <div className="flex">
                      {[...Array(review.rating)].map((_, i) => (
                        <Icon key={i} name="Star" className="text-accent fill-accent" size={16} />
                      ))}
                    </div>
                  </div>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground">{review.text}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="promo" className="min-h-screen py-20 px-4">
        <div className="container mx-auto max-w-4xl">
          <h2 className="text-3xl md:text-5xl text-center mb-12 text-primary">–ü—Ä–æ–º–æ–∫–æ–¥—ã</h2>
          <Card className="bg-gradient-to-br from-primary/20 to-secondary/20 border-2 border-primary/50 pixel-corners animate-scale-in">
            <CardHeader>
              <CardTitle className="text-2xl md:text-3xl text-center text-primary">
                üéÅ –í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–ª—É—á–∏ –ø–æ–¥–∞—Ä–∫–∏!
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="bg-card/50 p-6 rounded-lg border-2 border-accent/50">
                <p className="text-xl md:text-2xl font-bold text-center mb-4">
                  –ü—Ä–æ–º–æ–∫–æ–¥—ã –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:
                </p>
                <div className="space-y-3">
                  <div className="bg-background/50 p-4 rounded pixel-corners">
                    <code className="text-primary text-lg md:text-xl font-mono">/piona</code>
                  </div>
                  <div className="bg-background/50 p-4 rounded pixel-corners">
                    <code className="text-primary text-lg md:text-xl font-mono">/umQKoKiq</code>
                  </div>
                </div>
              </div>
              <p className="text-center text-muted-foreground">
                –í–≤–µ–¥–∏ —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –ø–æ–ª—É—á–∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã!
              </p>
            </CardContent>
          </Card>
        </div>
      </section>

      <section id="support" className="min-h-screen py-20 px-4 bg-gradient-to-b from-transparent via-accent/10 to-transparent">
        <div className="container mx-auto max-w-4xl">
          <h2 className="text-3xl md:text-5xl text-center mb-12 text-primary">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <Card className="bg-card/80 border-[#5865F2]/50 hover:border-[#5865F2] transition-all hover:scale-105 animate-fade-in">
              <CardHeader>
                <Icon name="MessageCircle" className="mx-auto text-[#5865F2] mb-2" size={48} />
                <CardTitle className="text-center">Discord</CardTitle>
                <CardDescription className="text-center">–ë—ã—Å—Ç—Ä–∞—è —Å–≤—è–∑—å –≤ Discord</CardDescription>
              </CardHeader>
              <CardContent>
                <Button className="w-full bg-[#5865F2] hover:bg-[#4752C4]" asChild>
                  <a href="https://discord.gg/WBrBCpUbkc" target="_blank" rel="noopener noreferrer">
                    –ü–µ—Ä–µ–π—Ç–∏
                  </a>
                </Button>
              </CardContent>
            </Card>

            <Card className="bg-card/80 border-[#0088cc]/50 hover:border-[#0088cc] transition-all hover:scale-105 animate-fade-in" style={{ animationDelay: '0.1s' }}>
              <CardHeader>
                <Icon name="Send" className="mx-auto text-[#0088cc] mb-2" size={48} />
                <CardTitle className="text-center">Telegram</CardTitle>
                <CardDescription className="text-center">–ù–æ–≤–æ—Å—Ç–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞</CardDescription>
              </CardHeader>
              <CardContent>
                <Button className="w-full bg-[#0088cc] hover:bg-[#0077bb]" asChild>
                  <a href="https://t.me/RoomTimeSRV" target="_blank" rel="noopener noreferrer">
                    –ü–µ—Ä–µ–π—Ç–∏
                  </a>
                </Button>
              </CardContent>
            </Card>

            <Card className="bg-card/80 border-[#0077ff]/50 hover:border-[#0077ff] transition-all hover:scale-105 animate-fade-in" style={{ animationDelay: '0.2s' }}>
              <CardHeader>
                <Icon name="Users" className="mx-auto text-[#0077ff] mb-2" size={48} />
                <CardTitle className="text-center">VK</CardTitle>
                <CardDescription className="text-center">–õ–∏—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</CardDescription>
              </CardHeader>
              <CardContent>
                <Button className="w-full bg-[#0077ff] hover:bg-[#0066ee]" asChild>
                  <a href="https://vk.com/minercasoft" target="_blank" rel="noopener noreferrer">
                    –ü–µ—Ä–µ–π—Ç–∏
                  </a>
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      <section id="rules" className="min-h-screen py-20 px-4">
        <div className="container mx-auto max-w-4xl">
          <h2 className="text-3xl md:text-5xl text-center mb-12 text-primary">–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞</h2>
          
          <Card className="bg-card/80 border-2 border-primary/50 pixel-corners animate-scale-in mb-8">
            <CardHeader>
              <CardTitle className="text-2xl text-center">üìú –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞</CardTitle>
              <CardDescription className="text-center">
                –°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –∏–≥—Ä—É –¥–ª—è –≤—Å–µ—Ö
              </CardDescription>
            </CardHeader>
            <CardContent>
              <ul className="space-y-4">
                {rules.map((rule, idx) => (
                  <li
                    key={idx}
                    className="flex items-start gap-3 p-4 bg-background/50 rounded-lg border border-primary/20 hover:border-primary/50 transition-all animate-fade-in"
                    style={{ animationDelay: `${idx * 0.05}s` }}
                  >
                    <Badge className="bg-primary text-primary-foreground shrink-0">
                      {idx + 1}
                    </Badge>
                    <span className="text-sm md:text-base">{rule}</span>
                  </li>
                ))}
              </ul>
            </CardContent>
          </Card>

          <Card className="bg-card/80 border-2 border-secondary/50 pixel-corners animate-scale-in">
            <CardHeader>
              <CardTitle className="text-2xl text-center">üõ°Ô∏è –ê–Ω—Ç–∏—á–∏—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã</CardTitle>
              <CardDescription className="text-center">
                –ü—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ —á–∏—Ç—ã
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Accordion type="single" collapsible className="w-full">
                {antiCheatPrograms.map((program, idx) => (
                  <AccordionItem key={idx} value={`item-${idx}`}>
                    <AccordionTrigger className="text-left">
                      <span className="text-primary font-bold">{program.name}</span>
                    </AccordionTrigger>
                    <AccordionContent>
                      <p className="text-muted-foreground">{program.desc}</p>
                    </AccordionContent>
                  </AccordionItem>
                ))}
              </Accordion>
              <p className="text-sm text-muted-foreground mt-4 p-3 bg-background/50 rounded border border-primary/20">
                ‚ö†Ô∏è –í–∞–∂–Ω–æ: –ü—Ä–æ–≤–µ—Ä—è—é—â–∏–µ —Å —Ä–∞–Ω–≥–æ–º Method –∏–º–µ—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ç—Ä–µ–±–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
              </p>
            </CardContent>
          </Card>
        </div>
      </section>

      <footer className="bg-black/80 border-t-2 border-primary/30 py-8 px-4">
        <div className="container mx-auto text-center">
          <p className="text-primary font-bold text-xl mb-2">ROOMTIMESERV</p>
          <p className="text-muted-foreground text-sm mb-4">
            –õ—É—á—à–∏–π Minecraft —Å–µ—Ä–≤–µ—Ä ‚Ä¢ IP: {serverIP}
          </p>
          <div className="flex justify-center gap-4">
            <a href="https://discord.gg/WBrBCpUbkc" target="_blank" rel="noopener noreferrer" className="hover:text-primary transition-colors">
              <Icon name="MessageCircle" size={24} />
            </a>
            <a href="https://t.me/RoomTimeSRV" target="_blank" rel="noopener noreferrer" className="hover:text-primary transition-colors">
              <Icon name="Send" size={24} />
            </a>
            <a href="https://vk.com/minercasoft" target="_blank" rel="noopener noreferrer" className="hover:text-primary transition-colors">
              <Icon name="Users" size={24} />
            </a>
          </div>
          <p className="text-xs text-muted-foreground mt-4">¬© 2025 RoomTimeServ. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
        </div>
      </footer>
      </div>
    </div>
  );
}